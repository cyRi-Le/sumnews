{"version":3,"sources":["Header.tsx","Footer.tsx","ButtonLink.tsx","Home.tsx","document/Article.tsx","document/Metric.tsx","document/Summary.tsx","document/DocumentViewer.tsx","Content.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","id","to","React","Component","Footer","ButtonLink","props","children","Home","document","title","href","Article","dangerouslySetInnerHTML","__html","content","numberOfTokens","Metric","style","backgroundColor","this","color","width","value","name","defaultProps","Summary","type","DocumentViewer","state","dataLoaded","data","loadingFailed","currentItemIndex","totalItemCount","isLoading","currentItem","undefined","loadData","bind","selectItem","k","newItem","setState","e","console","error","axios","get","then","response","Object","keys","length","log","catch","finally","onClick","num_tokens","reference_summary","base_model_summary","rouge1bm","rouge2bm","rougeLbm","fine_tuned_model_summary","rouge1ft","rouge2ft","rougeLft","Content","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1969eae9.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Header.css\";\nimport { Link} from \"react-router-dom\";\nexport default class Header extends React.Component<any, any>{\n    render() {\n        return (<div className=\"header-container flex-container flex-container-vertical\">\n                <div id=\"logo-container\">\n                    <ul className=\"menu-nav\">\n                        <li className=\"content-padding-level3\"><Link to=\"/sample\">English results</Link></li>\n                        <li className=\"content-padding-level3\"><Link to=\"/example\">French results</Link></li>\n                        <li className=\"content-padding-level3\"><Link to=\"/home\">Home</Link></li>\n                    </ul>\n                </div>\n                <div id=\"mid-top-wrapper\" className=\"center-content content-padding-level2\">\n                    <h3>News Summarization using Transformers</h3>\n                    <h5>EPFL computer science semester project</h5>\n                </div>\n            </div>);\n    }\n}","import React from \"react\"\nimport \"./Footer.css\";\nexport default class Footer extends React.Component<any, any>{\n    render() {\n        return (\n            <div className=\"footer-container center-content\">\n                <h6>EPFL's MLO Lab\n                </h6>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport \"./ButtonLink.css\";\n\nexport default function ButtonLink(props:any){\n\n    return (\n        <div className=\"button-link-container\">\n            <a className=\"button-link\" {...props}>{props.children}</a>\n        </div>)\n}","import React from \"react\";\nimport \"./Home.css\";\nimport ButtonLink from \"./ButtonLink\";\nexport default class Home extends React.Component<any, any>{\n    constructor(props:any) {\n        super(props);\n        document.title = \"News Summarization with Transformers\";\n    }\n    render() {\n        return (\n            <div className=\"home-container\">\n\n                <div id=\"presentation-wrapper\" className=\"flex-wrapper flex-wrapper-vertical content-padding-level5\">\n                    <div className=\"section-wrapper\">\n                        <div className=\"title-wrapper\">\n                            <h4 className=\"content-padding-left-level4\">Project</h4>\n                        </div>\n                        <div className=\"section-content\">\n                            <p>\n                                Summarization has become one of the most important task in Natural Language Processing.\n                                The state-of-the art Deep Learning models\n                                achieve outstanding quality summarization. All of the recent best performing models use\n                                the Transformer architecture introduced by Vaswani et al (2017).\n                                In this project, we use the DistilBart model, which is the distilled model (over\n                                CNN/Daily mail dataset) of the original Bart(Mike Lewis et al).\n                                The final goal is to achieve some \"good\" metrics on our custom dataset made up of EPFL's\n                                news over the five last years.\n                                Recently, large-scale pre-trained language models, such as BERT (Devlin et al., 2018)\n                                and GPT (Radford et al., 2018), have been used effectively as the base models for\n                                building task-specific natural language understanding (NLU) models via fine-tuning (such\n                                as text classification).\n                                However those pre-trained models are expensive to serve at runtime (e.g. BERT contains\n                                24 transformer layers with 344 million parameters, and GPT-2 contains 48 transformer\n                                layers with 1.5 billion parameters), which make them impossible to deploy on devices\n                                such as mobile phones\n                                and medium size websites.\n                                That's how it comes to distillation and fine-tuning pre-trained model.\n\n\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"section-wrapper\">\n                        <div className=\"title-wrapper\">\n                            <h4 className=\"content-padding-left-level4\">What is knowledge distillation ?</h4>\n                        </div>\n                        <div className=\"content-wrapper\">\n                            <p>Knowledge distillation is a process of distilling or transferring the knowledge from a\n                                (set of) large, cumbersome model(s) to a lighter, easier-to-deploy single model, without\n                                significant loss in performance (Hinton et al., 2015).\n                                This small model will be able to produce comparable results, and in some cases, it can\n                                even be made capable of replicating the results of the cumbersome model.\n                                We consider the cumbersome model as Teacher Network and our new small model as Student\n                                Network.</p>\n                        </div>\n                    </div>\n                    <div className=\"section-wrapper\">\n                        <div className=\"title-wrapper\">\n                            <h4 className=\"content-padding-left-level4\">Model size and metrics </h4>\n                        </div>\n                        <div className=\"content-wrapper\">\n                            <p>\n                                The model we use is from the distillation from of the original BART over the CNN/Daily\n                                mail summarization dataset.\n                                It is provided by the HuggingFace API via the <code>transformers</code> package.\n                            </p>\n                            <table>\n                                <caption>Table 1.1 Model parameters</caption>\n                                <tr>\n                                    <th>Model name</th>\n                                    <th> # of parameters</th>\n                                    <th>Rouge 2</th>\n                                    <th>Rouge L</th>\n                                    <th>Speed up</th>\n                                </tr>\n                                <tr>\n                                    <td>bart-large-cnn <br/>(baseline)</td>\n                                    <td>406 M</td>\n                                    <td>21.06</td>\n                                    <td>30.63</td>\n                                    <td>1</td>\n                                </tr>\n                                <tr>\n                                    <td>distilbart-12-6-cnn</td>\n                                    <td>306 M</td>\n                                    <td>21.26</td>\n                                    <td>30.59</td>\n                                    <td>1.24</td>\n                                </tr>\n\n                            </table>\n\n                        </div>\n                    </div>\n                    <div id=\"dataset-wrapper\" className=\"section-wrapper\">\n                        <div className=\"title-wrapper\">\n                            <h4 className=\"content-padding-left-level4\">News Corpus</h4>\n                        </div>\n                        <div className=\"content-wrapper\">\n                            <p> The dataset is made up of 1533 newspapers and their gold summaries i.e produced by human\n                                expert. We have split the dataset into two sets, one is the training set (80%) and the\n                                other is the test set (20%).\n                                Here is a link below to download the dataset (CSV format).</p>\n\n                                <ButtonLink href=\"https://s3.eu-west-3.amazonaws.com/summarization.data.io/news-large-1.zip\"\n                                   className=\"button-link border-radius-wrapper\" data-type=\"download\">Download the\n                                    dataset (2.7 MO)</ButtonLink>\n\n\n                        </div>\n\n                    </div>\n                    <div className=\"section-wrapper\">\n                        <div className=\"title-wrapper\"><h4 className=\"content-padding-left-level4\">Getting started</h4>\n                        </div>\n                        <div className=\"content-wrapper\">\n                            <p>Download the model last checkpoint from the link below. It can be loaded from native\n                                PyTorch or via the\n                                <code>transformers</code> library</p>\n\n                                <ButtonLink href=\"https://s3.eu-west-3.amazonaws.com/summarization.data.io/model-2-en.zip\"\n                                   className=\"button-link border-radius-wrapper\" data-type=\"download\">Download the model\n                                    (1.2 GB)</ButtonLink>\n                            <p>Download the python notebook to load the model. The notebook provided to run within a GPU\n                                environment (Kaggle, Colab, etc.)</p>\n                                <ButtonLink href=\"\" className=\"button-link border-radius-wrapper\" data-type=\"download\">Download\n                                    the notebook</ButtonLink>\n                        </div>\n                    </div>\n                    <div className=\"section-wrapper\">\n                        <div className=\"title-wrapper\">\n                            <h4 className=\"content-padding-left-level4\">Preliminary results</h4>\n                        </div>\n                        <div className=\"content-wrapper\">\n                            <p>The model is fine-tuned in Kaggle's environment (1GPU P100-16GB) with a batch size of 2\n                                over 20 epochs. We used Adam optimizer with\n                                l<sub>r</sub> = 5x10<sup>-5</sup> and settled a linear 6% warmup steps. Additionally,\n                                the news were cleaned from any HTML tag since the original CNN dataset is clean text.\n                            </p>\n\n                            <table>\n                                <caption>Table 1.2 Metrics of the fine-tuned model</caption>\n                                <tr>\n                                    <th>Metrics</th>\n                                    <th>distilbart-12-6-cnn <br/>(base)</th>\n                                    <th>distilbart-12-6-cnn <br/> (fine-tuned)</th>\n                                </tr>\n                                <tr>\n\n                                    <td>Rouge 1</td>\n                                    <td>35.69</td>\n                                    <td>44.90</td>\n                                </tr>\n                                <tr>\n                                    <td>Rouge 2</td>\n                                    <td>10.80</td>\n                                    <td>16.01</td>\n                                </tr>\n                                <tr>\n                                    <td>Rouge L</td>\n                                    <td>23.71</td>\n                                    <td>32.65</td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}","import React, {ReactNode} from \"react\";\nimport \"./Article.css\";\nexport interface ArticleProps{\n    title: string,\n    content: string,\n    numberOfTokens: number\n\n}\n\nexport default function Article(props:ArticleProps){\n    return (\n        <div className=\"article-wrapper\">\n            <h4 className=\"article-title\">\n                {props.title}</h4>\n\n            <div className=\"article-content\" dangerouslySetInnerHTML={{\n    __html: props.content\n}}/>\n            <div className=\"article-token-count\">\n                <span className=\"token-count-value\">Number of tokens: {props.numberOfTokens}</span>\n            </div>\n        </div>)\n}","import React from \"react\";\nimport \"./Metric.css\";\nimport PropTypes from \"prop-types\";\n\nexport default class Metric extends React.Component<any, any>{\n    static propTypes = {\n        value: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        color: PropTypes.string\n    }\n    static defaultProps = {\n        color: \"royalblue\",\n    }\n    render() {\n        return (\n                <div className=\"metric-container\">\n                    <div className=\"metric-bar-container\">\n                        <div className=\"metric-bar\" style={{backgroundColor:this.props.color, width:this.props.value + \"%\"}}/>\n                    </div>\n\n                    <div className=\"metric-span\">\n                        <span className=\"metric-name\"> {this.props.name}: </span>\n                        <span className=\"metric-value\">{this.props.value} %</span>\n                    </div>\n                </div>)\n    }\n}","import React from \"react\";\nimport \"./Summary.css\";\ninterface SummaryProps {\n    type: string,\n    content: string\n}\n\nexport default function Summary(props:SummaryProps){\n    return (\n        <div className=\"summary-container\">\n            <h5 className=\"summary-type\">{props.type}</h5>\n            <span className=\"summary-content\" dangerouslySetInnerHTML={{__html:props.content}}>\n            </span>\n        </div>)\n}","import React from \"react\"\nimport Article from \"./Article\";\nimport \"./DocumentViewer.css\";\nimport Metric from \"./Metric\";\nimport axios from \"axios\";\nimport Summary from \"./Summary\";\nexport default class DocumentViewer extends React.Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        document.title = \"Generated summaries\";\n        this.state = {\n            dataLoaded: false,\n            data: null,\n            loadingFailed: false,\n            currentItemIndex: null,\n            totalItemCount: null,\n            isLoading: false,\n            currentItem: undefined\n        }\n        this.loadData = this.loadData.bind(this);\n        this.selectItem = this.selectItem.bind(this);\n    }\n\n    componentDidMount() {\n        //alert(\"component mounted\");\n        this.loadData();\n    }\n\n    selectItem(k: number) {\n        try {\n            const totalItemCount = this.state.totalItemCount;\n            const newItem = ((k % totalItemCount) + totalItemCount) % totalItemCount;\n            this.setState({currentItemIndex: newItem, currentItem: this.state.data[newItem]});\n        } catch (e) {\n            // log error\n            console.error(e)\n        }\n    }\n\n    loadData() {\n        this.setState({isLoading: true})\n        axios.get(\"/data.json\").then((response: any) => {\n            // successful loading\n            const data = response.data;\n            this.setState({\n                data, dataLoaded: true, currentItemIndex: 0,\n                totalItemCount: Object.keys(data).length, currentItem: data[0]\n            });\n            console.log(this.state);\n        }).catch((error) => {\n            // log the error\n            console.log(\"error occurred\" + error)\n            this.setState({loadingFailed: true})\n        }).finally(() => {\n            this.setState({isLoading: false})\n        })\n    }\n\n    render() {\n        const currentItem = this.state.currentItem;\n        return (\n            <div className=\"document-viewer-container\">\n                <div className=\"document-viewer-overlay\">\n                    {this.state.isLoading && <div className=\"loader-container\"/>}\n                </div>\n                {this.state.dataLoaded && <>\n                    <div className=\"controls-section\">\n                        <button onClick={() => {\n                            this.selectItem(this.state.currentItemIndex - 1)\n                        }}>Previous</button>\n                        <button onClick={() => {\n                            this.selectItem(this.state.currentItemIndex + 1)\n                        }}>Next\n                        </button>\n                    </div>\n                    <div className=\"article-section content-section\">\n                        <Article title={currentItem.title} content={currentItem.document}\n                                 numberOfTokens={currentItem.num_tokens}/>\n                    </div>\n                    <div className=\"summaries-section content-section\">\n                        <Summary type={\"Human reference summary\"} content={currentItem.reference_summary}/>\n                        <Summary type={\"DistillBart base model summary\"} content={currentItem.base_model_summary}/>\n                        <Metric value={currentItem.rouge1bm} name={\"ROUGE 1\"}/>\n                        <Metric value={currentItem.rouge2bm} name={\"ROUGE 2\"}/>\n                        <Metric value={currentItem.rougeLbm} name={\"ROUGE L\"}/>\n                        <Summary type={\"Our fine-tuned DistillBart model summary\"} content={currentItem.fine_tuned_model_summary}/>\n                        <Metric value={currentItem.rouge1ft} name={\"ROUGE 1\"}/>\n                        <Metric value={currentItem.rouge2ft} name={\"ROUGE 2\"}/>\n                        <Metric value={currentItem.rougeLft} name={\"ROUGE L\"}/>\n                    </div>\n\n                    <div className=\"metrics-description\">*ROUGE higher is better</div>\n                </>}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport \"./Content.css\";\n\nexport default class Content extends React.Component<any, any>{\n    render() {\n        return (\n            <div className=\"content-container\">\n                {this.props.children}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport \"./style.css\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Home from \"./Home\";\nimport DocumentViewer from \"./document/DocumentViewer\";\nimport Content from \"./Content\";\nimport { BrowserRouter as Router, Route , Switch} from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Router> <Header/>\n        <Content>\n                <Switch>\n                    <Route exact path={\"/\"} component={Home}/>\n                    <Route exact path={\"/home\"} component={Home}/>\n                    <Route exact path={\"/example\"} component={DocumentViewer}/>\n                    <Route>\n                        <h1>Not found</h1>\n                    </Route>\n                </Switch>\n\n        </Content>\n               </Router>\n         <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}